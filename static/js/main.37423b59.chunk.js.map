{"version":3,"sources":["components/intro/intro.js","config.js","lib/options.js","components/data-entry/data-entry.js","lib/viz-util.js","components/bar-chart/bar-chart.js","components/legend/legend.js","components/scenarios/scenarios.js","lib/calc-util.js","lib/chart-text.js","lib/scenario-runner.js","App.js","serviceWorker.js","index.js"],"names":["Intro","react_default","a","createElement","className","config","Object","freeze","DEFAULT_GENDER","GENDER","key","value","lifeExpectancy","DEFAULT_MARITAL_STATUS","MARITAL_STATUS","label","DEFAULT_RRSP","MIN_RRSP","MAX_RRSP","DEFAULT_ANNUAL_CPP","MIN_ANNUAL_CPP","MAX_ANNUAL_CPP","DEFAULT_ANNUAL_PENSION","MIN_ANNUAL_PENSION","MAX_ANNUAL_PENSION","DEFAULT_RETIREMENT_AGE","MIN_RETIREMENT_AGE","MAX_RETIREMENT_AGE","GIS_ENTITLEMENT_AGE","generateStringOptions","configKey","result","forEach","ck","push","genderOptions","martialStatusOptions","retirementAgeOptions","from","to","i","generateNumericOptions","createSelection","opts","map","opt","DataEntry","state","gender","maritalStatus","rrsp","cpp","pension","retirementAge","update","field","evt","preventDefault","_this","setState","defineProperty","target","submitInput","event","runScenarios","props","_this$state","this","onSubmit","method","htmlFor","id","name","onChange","type","min","max","Component","barStyle","valueA","valueB","width","concat","formatMoney","accounting","BarChart","text","title","scenario1","scenario2","chartText","dangerouslySetInnerHTML","__html","style","Legend","Scenarios","data","cashOutBefore","cashOutAfter","legend_legend","bar_chart_bar_chart","annualIncome","annualIncomeForGisEligibility","monthlyGIS","monthlyGISEntitlement","annualGIS","annualGISEntitlement","totalGISInRetirement","totalGISEntitlement","find","el","yearsInRetirement","input","annualRrsp","annualIncomeForGisEligibilityWithRrsp","annualIncomeForGisEligibilityWithoutRrsp","monthlyGis","gisStatus","gisLookup","STATUS","SINGLE","convertMaritalStatus","gisResult","parseFloat","output","gis","numYearsCollectingGIS","numYearsInRetirement","numericInput","scenarioBefore","scenarioAfter","numYrsInRetirement","_calculate","annualIncomeFunc","annualGISAmt","calcUtil","run","parseInt","convertToNumeric","inp","calculateCashOutAfterRetirement","generate","App","_useState","useState","_useState2","slicedToArray","scenarios","setScenarios","intro_intro","data_entry_data_entry","scenarioResult","keys","length","constructor","components_scenarios_scenarios","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37423b59.chunk.js","sourcesContent":["import React from 'react';\nimport './intro.css';\n\nfunction Intro() {\n  return (\n    <div className=\"intro\">\n      <header className=\"intro--header\">RRSP vs GIS Calculator</header>\n      <ul className=\"intro--list\">\n        <li>Are you Canadian?</li>\n        <li>Low income?</li>\n        <li>Approaching retirement?</li>\n        <li>Having savings in an RRSP?</li>\n      </ul>\n      <section className=\"intro--detail\">\n        If you answered yes to the above, withdrawing from your RRSP during\n        retirement could{' '}\n        <span className=\"intro--emphasis intro--emphasis-negative\">reduce</span>{' '}\n        the amount of GIS (Guaranteed Income Supplement) you&apos;re entitled\n        to. Use this calculator to find out if you could be eligible for{' '}\n        <span className=\"intro--highlight\">more GIS</span> by cashing our your\n        RRSP before retiring.\n      </section>\n    </div>\n  );\n}\n\nexport default Intro;\n","const config = Object.freeze({\n  // https://www.worldlifeexpectancy.com/canada-life-expectancy\n  DEFAULT_GENDER: 'female',\n  GENDER: [\n    { key: 'male', value: 'male', lifeExpectancy: 81 },\n    { key: 'female', value: 'female', lifeExpectancy: 85 },\n  ],\n\n  // Only single supported for now\n  DEFAULT_MARITAL_STATUS: 'single',\n  MARITAL_STATUS: [\n    { key: 'single', value: 'single', label: 'Single' },\n    // {\n    //   key: 'partner_oas',\n    //   value: 'partner_oas',\n    //   label: 'Spouse/common-law partner of someone who receives an OAS Pension',\n    // },\n    // {\n    //   key: 'partner_oas',\n    //   value: 'partner_oas',\n    //   label:\n    //     'Spouse/common-law partner of someone who does not receive an OAS Pension',\n    // },\n  ],\n\n  DEFAULT_RRSP: 90000,\n  MIN_RRSP: 0,\n  MAX_RRSP: 1000000,\n\n  DEFAULT_ANNUAL_CPP: 9000,\n  MIN_ANNUAL_CPP: 0,\n  MAX_ANNUAL_CPP: 20000,\n\n  DEFAULT_ANNUAL_PENSION: 0,\n  MIN_ANNUAL_PENSION: 0,\n  MAX_ANNUAL_PENSION: 100000,\n\n  DEFAULT_RETIREMENT_AGE: 65,\n  MIN_RETIREMENT_AGE: 55,\n  MAX_RETIREMENT_AGE: 70,\n\n  // https://www.canada.ca/en/services/benefits/publicpensions/cpp/old-age-security/guaranteed-income-supplement/eligibility.html\n  GIS_ENTITLEMENT_AGE: 65,\n});\n\nexport default config;\n","import config from '../config';\n\nfunction generateNumericOptions(from, to) {\n  const result = [];\n  for (let i = from; i <= to; i += 1) {\n    result.push({\n      key: i,\n      value: i,\n      label: i,\n    });\n  }\n  return result;\n}\n\nfunction generateStringOptions(configKey) {\n  const result = [];\n  configKey.forEach(ck => {\n    result.push({\n      key: ck.key,\n      value: ck.value,\n      // TODO i18n\n      label: ck.label || ck.value,\n    });\n  });\n  return result;\n}\n\nconst genderOptions = generateStringOptions(config.GENDER);\nconst martialStatusOptions = generateStringOptions(config.MARITAL_STATUS);\nconst retirementAgeOptions = generateNumericOptions(\n  config.MIN_RETIREMENT_AGE,\n  config.MAX_RETIREMENT_AGE\n);\n\nexport { genderOptions, martialStatusOptions, retirementAgeOptions };\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nimport config from '../../config';\nimport {\n  genderOptions,\n  martialStatusOptions,\n  retirementAgeOptions,\n} from '../../lib/options';\nimport './data-entry.css';\n\nfunction createSelection(opts) {\n  return opts.map(opt => (\n    <option key={opt.key} value={opt.value}>\n      {opt.label}\n    </option>\n  ));\n}\n\nclass DataEntry extends Component {\n  // static propTypes = {\n  //   runScenarios: PropTypes.func,\n  // };\n\n  state = {\n    gender: config.DEFAULT_GENDER,\n    maritalStatus: config.DEFAULT_MARITAL_STATUS,\n    rrsp: config.DEFAULT_RRSP,\n    cpp: config.DEFAULT_ANNUAL_CPP,\n    pension: config.DEFAULT_ANNUAL_PENSION,\n    retirementAge: config.DEFAULT_RETIREMENT_AGE,\n  };\n\n  update = field => evt => {\n    evt.preventDefault();\n    this.setState({\n      [field]: evt.target.value,\n    });\n  };\n\n  submitInput = event => {\n    event.preventDefault();\n    const { runScenarios } = this.props;\n    runScenarios(this.state);\n  };\n\n  render() {\n    const {\n      gender,\n      maritalStatus,\n      rrsp,\n      cpp,\n      pension,\n      retirementAge,\n    } = this.state;\n    return (\n      <div className=\"data-entry\">\n        <form onSubmit={this.submitInput} method=\"post\">\n          <label className=\"data-entry-label\" htmlFor=\"selectGender\">\n            Gender\n            <select\n              id=\"selectGender\"\n              name=\"selectGender\"\n              value={gender}\n              onChange={this.update('gender')}\n              className=\"data-entry-input\"\n            >\n              {createSelection(genderOptions)}\n            </select>\n          </label>\n\n          <label className=\"data-entry-label\" htmlFor=\"selectMaritalStatus\">\n            Marital Status\n            <select\n              id=\"selectMaritalStatus\"\n              name=\"selectMaritalStatus\"\n              value={maritalStatus}\n              onChange={this.update('maritalStatus')}\n              className=\"data-entry-input\"\n            >\n              {createSelection(martialStatusOptions)}\n            </select>\n          </label>\n\n          <label className=\"data-entry-label\" htmlFor=\"rrsp\">\n            Total RRSP\n            <input\n              id=\"rrsp\"\n              type=\"number\"\n              name=\"rrsp\"\n              value={rrsp}\n              onChange={this.update('rrsp')}\n              min={config.MIN_RRSP}\n              max={config.MAX_RRSP}\n              className=\"data-entry-input\"\n            />\n          </label>\n\n          <label className=\"data-entry-label\" htmlFor=\"cpp\">\n            Annual CPP Entitlement\n            <input\n              id=\"cpp\"\n              type=\"number\"\n              name=\"cpp\"\n              value={cpp}\n              onChange={this.update('cpp')}\n              min={config.MIN_ANNUAL_CPP}\n              max={config.MAX_ANNUAL_CPP}\n              className=\"data-entry-input\"\n            />\n          </label>\n\n          <label className=\"data-entry-label\" htmlFor=\"pension\">\n            Annual Pension\n            <input\n              id=\"pension\"\n              type=\"number\"\n              name=\"pension\"\n              value={pension}\n              onChange={this.update('pension')}\n              min={config.MIN_ANNUAL_PENSION}\n              max={config.MAX_ANNUAL_PENSION}\n              className=\"data-entry-input\"\n            />\n          </label>\n\n          <label className=\"data-entry-label\" htmlFor=\"selectRetirementAge\">\n            Retirement Age\n            <select\n              id=\"selectRetirementAge\"\n              name=\"selectRetirementAge\"\n              value={retirementAge}\n              onChange={this.update('retirementAge')}\n              className=\"data-entry-input\"\n            >\n              {createSelection(retirementAgeOptions)}\n            </select>\n          </label>\n\n          <button type=\"submit\" className=\"data-entry-submit\">\n            Compare my options\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default DataEntry;\n","import { accounting } from 'accounting';\n\nfunction barStyle(valueA, valueB) {\n  const percentage = valueA < valueB ? `${(valueA / valueB) * 100}%` : '100%';\n  return {\n    width: percentage,\n  };\n}\n\nfunction formatMoney(value) {\n  return accounting.formatMoney(value);\n}\n\nexport { barStyle, formatMoney };\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { barStyle, formatMoney } from '../../lib/viz-util';\nimport './bar-chart.css';\nimport './chart-text.css';\n\nfunction createMarkup(text) {\n  return { __html: text };\n}\n\nfunction BarChart(props) {\n  const { title, scenario1, scenario2, chartText } = props;\n  return (\n    <div className=\"bar-chart\">\n      <h2 className=\"bar-chart--title\">{title}</h2>\n      <div\n        className=\"chart-text\"\n        dangerouslySetInnerHTML={createMarkup(chartText)}\n      />\n      <div className=\"bar-chart--bar-container\">\n        <div className=\"bar-chart--bar-outer\">\n          <div\n            className=\"bar-chart--bar bar-chart--bar1\"\n            style={barStyle(scenario1, scenario2)}\n          />\n        </div>\n        <div className=\"bar-chart--bar-label\">{formatMoney(scenario1)}</div>\n      </div>\n      <div className=\"bar-chart--bar-container\">\n        <div className=\"bar-chart--bar-outer\">\n          <div\n            className=\"bar-chart--bar bar-chart--bar2\"\n            style={barStyle(scenario2, scenario1)}\n          />\n        </div>\n        <div className=\"bar-chart--bar-label\">{formatMoney(scenario2)}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default BarChart;\n","import React from 'react';\nimport './legend.css';\n\nfunction Legend() {\n  return (\n    <div className=\"legend\">\n      <div className=\"legend--symbol legend--symbol--before\" />\n      <div className=\"legend--label\">Cashout Before</div>\n      <div className=\"legend--symbol legend--symbol--after\" />\n      <div className=\"legend--label\">Cashout After</div>\n    </div>\n  );\n}\n\nexport default Legend;\n","import React from 'react';\nimport './scenarios.css';\nimport BarChart from '../bar-chart/bar-chart';\nimport Legend from '../legend/legend';\n\nfunction Scenarios(props) {\n  const { data } = props;\n  const { cashOutBefore, cashOutAfter, chartText } = data;\n  return (\n    <div className=\"scenarios\">\n      <Legend />\n      <div className=\"scenarios--data\">\n        <BarChart\n          title=\"Annual Income for GIS Eligibility\"\n          scenario1={cashOutBefore.annualIncome}\n          scenario2={cashOutAfter.annualIncome}\n          chartText={chartText.annualIncomeForGisEligibility}\n        />\n        <BarChart\n          title=\"Monthly GIS Entitlement\"\n          scenario1={cashOutBefore.monthlyGIS}\n          scenario2={cashOutAfter.monthlyGIS}\n          chartText={chartText.monthlyGISEntitlement}\n        />\n        <BarChart\n          title=\"Annual GIS Entitlement\"\n          scenario1={cashOutBefore.annualGIS}\n          scenario2={cashOutAfter.annualGIS}\n          chartText={chartText.annualGISEntitlement}\n        />\n        <BarChart\n          title=\"Total GIS in Retirement\"\n          scenario1={cashOutBefore.totalGISInRetirement}\n          scenario2={cashOutAfter.totalGISInRetirement}\n          chartText={chartText.totalGISEntitlement}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Scenarios;\n","import gisLookup from 'gis-lookup';\nimport config from '../config';\n\nfunction lifeExpectancy(gender) {\n  return config.GENDER.find(el => el.key === gender).lifeExpectancy;\n}\n\nfunction yearsInRetirement(input) {\n  return lifeExpectancy(input.gender) - input.retirementAge;\n}\n\nfunction annualRrsp(input) {\n  return input.rrsp / yearsInRetirement(input);\n}\n\nfunction annualIncomeForGisEligibilityWithRrsp(input) {\n  return input.cpp + input.pension + annualRrsp(input);\n}\n\nfunction annualIncomeForGisEligibilityWithoutRrsp(input) {\n  return input.cpp + input.pension;\n}\n\nfunction convertMaritalStatus(maritalStatus) {\n  let result = gisLookup.STATUS.SINGLE;\n  if (maritalStatus === config.DEFAULT_MARITAL_STATUS) {\n    result = gisLookup.STATUS.SINGLE;\n  }\n  return result;\n}\n\nfunction monthlyGis(annualIncome, maritalStatus) {\n  const gisStatus = convertMaritalStatus(maritalStatus);\n  const gisResult = gisLookup.find(gisStatus, annualIncome);\n  return parseFloat(gisResult.output.gis);\n}\n\nfunction annualGIS(monthlyGisAmt) {\n  return monthlyGisAmt * 12;\n}\n\nfunction numYearsCollectingGIS(retirementAge, numYearsInRetirement) {\n  return retirementAge < config.GIS_ENTITLEMENT_AGE\n    ? numYearsInRetirement - (config.GIS_ENTITLEMENT_AGE - retirementAge)\n    : numYearsInRetirement;\n}\n\nfunction totalGisInRetirement(\n  annualGISAmt,\n  numYearsInRetirement,\n  retirementAge\n) {\n  const numYrs = numYearsCollectingGIS(retirementAge, numYearsInRetirement);\n  return annualGISAmt * numYrs;\n}\n\nexport {\n  annualRrsp,\n  yearsInRetirement,\n  annualIncomeForGisEligibilityWithRrsp,\n  annualIncomeForGisEligibilityWithoutRrsp,\n  monthlyGis,\n  annualGIS,\n  numYearsCollectingGIS,\n  totalGisInRetirement,\n  lifeExpectancy,\n};\n","import { formatMoney } from './viz-util';\nimport {\n  annualRrsp,\n  lifeExpectancy,\n  yearsInRetirement,\n  numYearsCollectingGIS,\n} from './calc-util';\nimport config from '../config';\n\nfunction annualIncomeForGisEligibility(\n  numericInput,\n  scenarioBefore,\n  scenarioAfter\n) {\n  return `If you cash out your RRSP <span class=\"chart-text--time chart-text--time-before\">before</span> retiring,\\\n  then the income used to determine how much GIS you're eligible for will be your CPP of\\\n  <span class=\"chart-text--number\">${formatMoney(numericInput.cpp)}</span>\\\n  plus your pension of\\\n  <span class=\"chart-text--number\">${formatMoney(numericInput.pension)}</span>\\\n  for a total of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.annualIncome\n  )}</span>.\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  If you withdraw from your RRSP <span class=\"chart-text--time chart-text--time-after\">after</span> retiring,\\\n  then the withdrawals get included in your income for GIS eligibility purposes.\\\n  Given Canadian\\\n  <span class=\"chart-text--number\">${numericInput.gender}</span>\\\n  life expectancy of\\\n  <span class=\"chart-text--basic\">${lifeExpectancy(numericInput.gender)}</span>\\\n  and your retirement age of\\\n  <span class=\"chart-text--number\">${numericInput.retirementAge}</span>,\\\n  you will have an estimated\\\n  <span class=\"chart-text--number\">${scenarioBefore.numYrsInRetirement}</span>\\\n  years in retirement. Assuming an even withdrawal rate from your\\\n  <span class=\"chart-text--number\">${formatMoney(numericInput.rrsp)}</span>\\\n  RRSP throughout retirement,\\\n  this will add\\\n  <span class=\"chart-text--number\">${formatMoney(\n    annualRrsp(numericInput)\n  )}</span>,\\\n  to your income for a total of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioAfter.annualIncome\n  )}</span>.\\\n  `;\n}\n\nfunction monthlyGISEntitlement(numericInput, scenarioBefore, scenarioAfter) {\n  return `If you cash out your RRSP <span class=\"chart-text--time chart-text--time-before\">before</span> retiring,\\\n  then your income of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.annualIncome\n  )}</span>\\\n  makes you eligible for a monthly GIS benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.monthlyGIS\n  )}</span>\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  If you withdraw from your RRSP <span class=\"chart-text--time chart-text--time-after\">after</span> retiring,\\\n  then the\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioAfter.annualIncome - scenarioBefore.annualIncome\n  )}</span>\\\n  increase in your income reduces your GIS payment by\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.monthlyGIS - scenarioAfter.monthlyGIS\n  )}</span>\\\n  resulting in a lower monthly benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioAfter.monthlyGIS\n  )}</span>\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  Remember when cashing out your RRSP <span class=\"chart-text--time chart-text--time-before\">before</span> retiring,\n  you still have the money (for example in a savings account), but it doesn't count as income for\\\n  GIS eligibility purposes.\n  `;\n}\n\nfunction annualGISEntitlement(numericInput, scenarioBefore, scenarioAfter) {\n  return `Translating your monthly GIS benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.monthlyGIS\n  )}</span>\\\n  to a yearly value,\\\n  cashing out your RRSP <span class=\"chart-text--time chart-text--time-before\">before</span> retiring,\\\n  would result in an annual GIS benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.annualGIS\n  )}</span>.\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  Cashing out your RRSP <span class=\"chart-text--time chart-text--time-after\">after</span> retirement,\\\n  would result in a lower annual GIS benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioAfter.annualGIS\n  )}</span>.`;\n}\n\nfunction totalGISEntitlement(numericInput, scenarioBefore, scenarioAfter) {\n  return `You're eligible to start receiving GIS at age\\\n  <span class=\"chart-text--basic\">${config.GIS_ENTITLEMENT_AGE}</span>.\\\n  Given Canadian\\\n  <span class=\"chart-text--number\">${numericInput.gender}</span>\\\n  life expectancy of\\\n  <span class=\"chart-text--basic\">${lifeExpectancy(numericInput.gender)}</span>\\\n  and your retirement age of\\\n  <span class=\"chart-text--number\">${numericInput.retirementAge}</span>,\\\n  you will have an estimated\\\n  <span class=\"chart-text--number\">${numYearsCollectingGIS(\n    numericInput.retirementAge,\n    yearsInRetirement(numericInput)\n  )}</span>\\\n  years of collecting GIS during retirement.\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  Multiplying your expected years of collecting GIS by your annual GIS benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.annualGIS\n  )}</span>\\\n  results in an total GIS benefit of\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.totalGISInRetirement\n  )}</span>\\\n  during retirement,\\\n  when the RRSP is cashed out <span class=\"chart-text--time chart-text--time-before\">before</span> beginning retirement.\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  If the RRSP is cashed out <span class=\"chart-text--time chart-text--time-after\">after</span> retirement, total benefit would be\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioAfter.totalGISInRetirement\n  )}</span>.\\\n  <span class=\"chart-text--separator\">&nbsp;</span>\\\n  This means you could have\\\n  <span class=\"chart-text--number\">${formatMoney(\n    scenarioBefore.totalGISInRetirement - scenarioAfter.totalGISInRetirement\n  )}</span>\\\n  more in GIS benefits by cashing out RRSP <span class=\"chart-text--time chart-text--time-before\">before</span> retirement.`;\n}\n\nfunction generate(numericInput, scenarioBefore, scenarioAfter) {\n  return {\n    annualIncomeForGisEligibility: annualIncomeForGisEligibility(\n      numericInput,\n      scenarioBefore,\n      scenarioAfter\n    ),\n    monthlyGISEntitlement: monthlyGISEntitlement(\n      numericInput,\n      scenarioBefore,\n      scenarioAfter\n    ),\n    annualGISEntitlement: annualGISEntitlement(\n      numericInput,\n      scenarioBefore,\n      scenarioAfter\n    ),\n    totalGISEntitlement: totalGISEntitlement(\n      numericInput,\n      scenarioBefore,\n      scenarioAfter\n    ),\n  };\n}\n\nexport { generate };\n","import * as calcUtil from './calc-util';\nimport { generate } from './chart-text';\n\nfunction convertToNumeric(input) {\n  return {\n    cpp: parseInt(input.cpp, 10),\n    pension: parseInt(input.pension, 10),\n    retirementAge: parseInt(input.retirementAge, 10),\n    rrsp: parseInt(input.rrsp, 10),\n    gender: input.gender,\n    maritalStatus: input.maritalStatus,\n  };\n}\n\nfunction _calculate(numericInput, annualIncomeFunc) {\n  const annualIncome = annualIncomeFunc(numericInput);\n  const numYrsInRetirement = calcUtil.yearsInRetirement(numericInput);\n  const monthlyGIS = calcUtil.monthlyGis(\n    annualIncome,\n    numericInput.maritalStatus\n  );\n  const annualGIS = calcUtil.annualGIS(monthlyGIS);\n  const totalGISInRetirement = calcUtil.totalGisInRetirement(\n    annualGIS,\n    numYrsInRetirement,\n    numericInput.retirementAge\n  );\n  return {\n    totalGISInRetirement,\n    numYrsInRetirement,\n    annualIncome,\n    monthlyGIS,\n    annualGIS,\n  };\n}\n\nfunction calculateCashOutBeforeRetirement(inp) {\n  return _calculate(inp, calcUtil.annualIncomeForGisEligibilityWithoutRrsp);\n}\n\nfunction calculateCashOutAfterRetirement(inp) {\n  return _calculate(inp, calcUtil.annualIncomeForGisEligibilityWithRrsp);\n}\n\nfunction run(input) {\n  const numericInput = convertToNumeric(input);\n  const cashOutBefore = calculateCashOutBeforeRetirement(numericInput);\n  const cashOutAfter = calculateCashOutAfterRetirement(numericInput);\n  const chartText = generate(numericInput, cashOutBefore, cashOutAfter);\n  return {\n    cashOutBefore,\n    cashOutAfter,\n    chartText,\n  };\n}\n\nexport { run };\n","import React, { useState } from 'react';\nimport './App.css';\nimport Intro from './components/intro/intro';\nimport DataEntry from './components/data-entry/data-entry';\nimport Scenarios from './components/scenarios/scenarios';\nimport { run } from './lib/scenario-runner';\n\nfunction App() {\n  const [scenarios, setScenarios] = useState({});\n\n  const runScenarios = input => {\n    const scenarioResult = run(input);\n    setScenarios(scenarioResult);\n  };\n\n  function scenariosHelper() {\n    if (\n      Object.keys(scenarios).length === 0 &&\n      scenarios.constructor === Object\n    ) {\n      return <div className=\"empty\" />;\n    }\n    if (scenarios.cashOutBefore.monthlyGIS === 0) {\n      return <div className=\"no-gis\">You are not eligible for GIS.</div>;\n    }\n    return <Scenarios data={scenarios} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Intro />\n      <DataEntry runScenarios={runScenarios} />\n      {scenariosHelper()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}